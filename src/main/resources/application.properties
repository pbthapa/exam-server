################### Spring Boot Data Source Configuration ############
server.port=8081
#Database Configuration
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/exam-v1.0
spring.datasource.username=pushpathapa
spring.datasource.password=P@ssw0rd010

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.format-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.hibernate.use-new-id-generator-mappings=true

security.basic.enabled=false

####################REDIS Configuration#####################
spring.cache.type=redis
spring.redis.host=127.0.0.1
spring.redis.port=6379

# basic auth is default true, we dont want that
keycloak.enable-basic-auth=false
# the url to our sso server (keycloak)
keycloak.auth-server-url=http://localhost:8080/auth
# no ssl is ok for demo  - do not use this in production
keycloak.ssl-required=none
# realm to which the resource is assigned to
keycloak.realm=lis-exam-realm
keycloak.resource=lis-exam-service
# we do not write a web-app - so no login page and redirects are necessary
keycloak.public-client=false
# authentification via accesstoken is fine
keycloak.bearer-only=true
# use this if you manage your roles in client scope not in realm scope
keycloak.use-resource-role-mappings=true
keycloak.credentials.secret=1b72210a-c9bf-4840-bce0-146d45e2509b
keycloak.principal-attribute=preferred_username

# Keycloak Enable CORS
keycloak.cors=true
keycloak.enabled=false

# keycloak security
keycloak.securityConstraints[1].authRoles[0]=user
keycloak.securityConstraints[1].securityCollections[0].patterns[0]=/api/*

logging.level.org.keycloak=trace
logging.level.org.springframework.security=trace